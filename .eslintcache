[{"E:\\Shayan\\My folder\\BootCamp2020\\covid19-tracker-app\\src\\reportWebVitals.js":"1","E:\\Shayan\\My folder\\BootCamp2020\\covid19-tracker-app\\src\\App.js":"2","E:\\Shayan\\My folder\\BootCamp2020\\covid19-tracker-app\\src\\components\\index.js":"3","E:\\Shayan\\My folder\\BootCamp2020\\covid19-tracker-app\\src\\components\\chart\\Chart.jsx":"4","E:\\Shayan\\My folder\\BootCamp2020\\covid19-tracker-app\\src\\index.js":"5","E:\\Shayan\\My folder\\BootCamp2020\\covid19-tracker-app\\src\\api\\index.js":"6","E:\\Shayan\\My folder\\BootCamp2020\\covid19-tracker-app\\src\\components\\cards\\Cards.jsx":"7","E:\\Shayan\\My folder\\BootCamp2020\\covid19-tracker-app\\src\\components\\countrypicker\\CountryPicker.jsx":"8"},{"size":362,"mtime":1606154490012,"results":"9","hashOfConfig":"10"},{"size":1101,"mtime":1606504411212,"results":"11","hashOfConfig":"10"},{"size":175,"mtime":1606158883549,"results":"12","hashOfConfig":"10"},{"size":2154,"mtime":1606503740442,"results":"13","hashOfConfig":"10"},{"size":148,"mtime":1606158984583,"results":"14","hashOfConfig":"10"},{"size":1104,"mtime":1606503709171,"results":"15","hashOfConfig":"10"},{"size":2630,"mtime":1606336091804,"results":"16","hashOfConfig":"10"},{"size":974,"mtime":1606335056160,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ib92ou",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"E:\\Shayan\\My folder\\BootCamp2020\\covid19-tracker-app\\src\\reportWebVitals.js",[],"E:\\Shayan\\My folder\\BootCamp2020\\covid19-tracker-app\\src\\App.js",[],["38","39"],"E:\\Shayan\\My folder\\BootCamp2020\\covid19-tracker-app\\src\\components\\index.js",[],"E:\\Shayan\\My folder\\BootCamp2020\\covid19-tracker-app\\src\\components\\chart\\Chart.jsx",["40"],"import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\nimport { yellow } from '@material-ui/core/colors';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, []); \r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (\r\n        <Line \r\n            data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: 'blue',\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: '#ffcccb',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n    console.log(confirmed, recovered, deaths);\r\n\r\n    const barChart = (\r\n        confirmed\r\n            ? (\r\n                <Bar\r\n                    data={{\r\n                        labels: ['Infected', 'Recovered', 'Deaths'],\r\n                        datasets: [{\r\n                            label: 'People',\r\n                            backgroundColor: ['blue', 'green', 'red',],\r\n                            data: [confirmed.value, recovered.value, deaths.value]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        legend: { display: false },\r\n                        title: { display: true, text: `Current state in ${country}`},\r\n                    }}\r\n                />\r\n            ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","E:\\Shayan\\My folder\\BootCamp2020\\covid19-tracker-app\\src\\index.js",[],["41","42"],"E:\\Shayan\\My folder\\BootCamp2020\\covid19-tracker-app\\src\\api\\index.js",[],"E:\\Shayan\\My folder\\BootCamp2020\\covid19-tracker-app\\src\\components\\cards\\Cards.jsx",[],["43","44"],"E:\\Shayan\\My folder\\BootCamp2020\\covid19-tracker-app\\src\\components\\countrypicker\\CountryPicker.jsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":6,"column":10,"nodeType":"51","messageId":"52","endLine":6,"endColumn":16},{"ruleId":"45","replacedBy":"53"},{"ruleId":"47","replacedBy":"54"},{"ruleId":"45","replacedBy":"55"},{"ruleId":"47","replacedBy":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'yellow' is defined but never used.","Identifier","unusedVar",["57"],["58"],["57"],["58"],"no-global-assign","no-unsafe-negation"]